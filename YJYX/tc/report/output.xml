<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.5 on win32)" generated="20200622 17:48:48.338" rpa="false">
<suite id="s1" name="Tc" source="F:\PycharmProjects\YJYX\tc">
<suite id="s1-s1" name="空白数据" source="F:\PycharmProjects\YJYX\tc\空白数据">
<kw name="Delete All School Classes" library="pylib.SchoolClassLib" type="setup">
<msg timestamp="20200622 17:48:48.731" level="INFO">{'gradeid': None, 'retcode': 0, 'retlist': []}
{'gradeid': None, 'retcode': 0, 'retlist': []}
{'gradeid': 1, 'retcode': 0, 'retlist': []}
{'gradeid': 1, 'retcode': 0, 'retlist': []}</msg>
<status status="PASS" starttime="20200622 17:48:48.448" endtime="20200622 17:48:48.731"></status>
</kw>
<suite id="s1-s1-s1" name="D-7年级1班" source="F:\PycharmProjects\YJYX\tc\空白数据\d-7年级1班">
<kw name="Add School Class" library="pylib.SchoolClassLib" type="setup">
<arguments>
<arg>1</arg>
<arg>1班</arg>
<arg>60</arg>
<arg>suite_g7c1_classid</arg>
</arguments>
<msg timestamp="20200622 17:48:48.836" level="INFO">${suite_g7c1_classid} = 427459</msg>
<msg timestamp="20200622 17:48:48.836" level="INFO">{'id': 427459, 'invitecode': '4274597213175', 'retcode': 0}
before
global var set: $suite_g7c1_classid:427459</msg>
<status status="PASS" starttime="20200622 17:48:48.736" endtime="20200622 17:48:48.836"></status>
</kw>
<suite id="s1-s1-s1-s1" name="班级管理" source="F:\PycharmProjects\YJYX\tc\空白数据\d-7年级1班\班级管理.robot">
<test id="s1-s1-s1-s1-t1" name="添加班级2 - tc000002">
<kw name="Add School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>1</arg>
<arg>2班</arg>
<arg>60</arg>
</arguments>
<assign>
<var>${ret1}</var>
</assign>
<msg timestamp="20200622 17:48:48.935" level="INFO">{'id': 427460, 'invitecode': '4274602463920', 'retcode': 0}</msg>
<msg timestamp="20200622 17:48:48.935" level="INFO">${ret1} = {'invitecode': '4274602463920', 'retcode': 0, 'id': 427460}</msg>
<status status="PASS" starttime="20200622 17:48:48.849" endtime="20200622 17:48:48.935"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$ret1['retcode']==0</arg>
</arguments>
<status status="PASS" starttime="20200622 17:48:48.936" endtime="20200622 17:48:48.942"></status>
</kw>
<kw name="List School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${ret2}</var>
</assign>
<msg timestamp="20200622 17:48:49.035" level="INFO">{ 'gradeid': 1,
  'retcode': 0,
  'retlist': [ { 'grade__name': '七年级',
                 'id': 427459,
                 'invitecode': '4274597213175',
                 'name': '1班',
                 'studentlimit': 60,
                 'studentnumber': 0,
                 'teacherlist': []},
               { 'grade__name': '七年级',
                 'id': 427460,
                 'invitecode': '4274602463920',
                 'name': '2班',
                 'studentlimit': 60,
                 'studentnumber': 0,
                 'teacherlist': []}]}</msg>
<msg timestamp="20200622 17:48:49.035" level="INFO">${ret2} = {'gradeid': 1, 'retlist': [{'name': '1班', 'grade__name': '七年级', 'invitecode': '4274597213175', 'studentlimit': 60, 'studentnumber': 0, 'id': 427459, 'teacherlist': []}, {'name': '2班', 'grade__name': '...</msg>
<status status="PASS" starttime="20200622 17:48:48.943" endtime="20200622 17:48:49.035"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$ret2['retlist']</arg>
</arguments>
<assign>
<var>${retlist}</var>
</assign>
<msg timestamp="20200622 17:48:49.037" level="INFO">${retlist} = [{'name': '1班', 'grade__name': '七年级', 'invitecode': '4274597213175', 'studentlimit': 60, 'studentnumber': 0, 'id': 427459, 'teacherlist': []}, {'name': '2班', 'grade__name': '七年级', 'invitecode': '42746...</msg>
<status status="PASS" starttime="20200622 17:48:49.037" endtime="20200622 17:48:49.037"></status>
</kw>
<kw name="Classlist Should Contain" library="pylib.SchoolClassLib">
<arguments>
<arg>${retlist}</arg>
<arg>2班</arg>
<arg>七年级</arg>
<arg>&amp;{ret1}[invitecode]</arg>
<arg>60</arg>
<arg>0</arg>
<arg>&amp;{ret1}[id]</arg>
</arguments>
<msg timestamp="20200622 17:48:49.038" level="WARN">Accessing variable items using '&amp;{ret1}[invitecode]' syntax is deprecated. Use '${ret1}[invitecode]' instead.</msg>
<msg timestamp="20200622 17:48:49.039" level="WARN">Accessing variable items using '&amp;{ret1}[id]' syntax is deprecated. Use '${ret1}[id]' instead.</msg>
<msg timestamp="20200622 17:48:49.040" level="INFO">occur 1 times</msg>
<status status="PASS" starttime="20200622 17:48:49.038" endtime="20200622 17:48:49.040"></status>
</kw>
<kw name="Delete School Class" library="pylib.SchoolClassLib" type="teardown">
<arguments>
<arg>&amp;{ret1}[id]</arg>
</arguments>
<msg timestamp="20200622 17:48:49.041" level="WARN">Accessing variable items using '&amp;{ret1}[id]' syntax is deprecated. Use '${ret1}[id]' instead.</msg>
<status status="PASS" starttime="20200622 17:48:49.041" endtime="20200622 17:48:49.134"></status>
</kw>
<status status="PASS" starttime="20200622 17:48:48.842" endtime="20200622 17:48:49.135" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-t2" name="添加班级3 - tc000003">
<kw name="Add School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>1</arg>
<arg>1班</arg>
<arg>60</arg>
</arguments>
<assign>
<var>${ret1}</var>
</assign>
<msg timestamp="20200622 17:48:49.252" level="INFO">{ 'reason': 'Traceback (most recent call last):\n'
            '  File '
            '"/home/yjyx/yijiao_src/yijiao_main/services/datamodel/schoolclass/models.py", '
            'line 542, in addClass\n'
            '    school_class = '
            'self._addClass(name,schoolid,gradeid,studentlimit)\n'
            '  File '
            '"/home/yjyx/yijiao_src/yijiao_main/services/datamodel/schoolclass/models.py", '
            'line 531, in _addClass\n'
            '    school_class.save()\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/models/base.py", '
            'line 710, in save\n'
            '    force_update=force_update, update_fields=update_fields)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/models/base.py", '
            'line 738, in save_base\n'
            '    updated = self._save_table(raw, cls, force_insert, '
            'force_update, using, update_fields)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/models/base.py", '
            'line 822, in _save_table\n'
            '    result = self._do_insert(cls._base_manager, using, fields, '
            'update_pk, raw)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/models/base.py", '
            'line 861, in _do_insert\n'
            '    using=using, raw=raw)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/models/manager.py", '
            'line 127, in manager_method\n'
            '    return getattr(self.get_queryset(), name)(*args, **kwargs)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/models/query.py", '
            'line 920, in _insert\n'
            '    return '
            'query.get_compiler(using=using).execute_sql(return_id)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py", '
            'line 974, in execute_sql\n'
            '    cursor.execute(sql, params)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/backends/utils.py", '
            'line 64, in execute\n'
            '    return self.cursor.execute(sql, params)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/utils.py", line '
            '97, in __exit__\n'
            '    six.reraise(dj_exc_type, dj_exc_value, traceback)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/backends/utils.py", '
            'line 64, in execute\n'
            '    return self.cursor.execute(sql, params)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/backends/mysql/base.py", '
            'line 124, in execute\n'
            '    return self.cursor.execute(query, args)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/MySQLdb/cursors.py", line '
            '205, in execute\n'
            '    self.errorhandler(self, exc, value)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/MySQLdb/connections.py", '
            'line 36, in defaulterrorhandler\n'
            '    raise errorclass, errorvalue\n'
            'IntegrityError: (1062, "Duplicate entry '
            '\'1\\xe7\\x8f\\xad-1016-1\' for key \'name\'")\n',
  'retcode': 1}</msg>
<msg timestamp="20200622 17:48:49.252" level="INFO">${ret1} = {'reason': 'Traceback (most recent call last):\n  File "/home/yjyx/yijiao_src/yijiao_main/services/datamodel/schoolclass/models.py", line 542, in addClass\n    school_class = self._addClass(name,schoo...</msg>
<status status="PASS" starttime="20200622 17:48:49.136" endtime="20200622 17:48:49.253"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$ret1['retcode']==1</arg>
</arguments>
<status status="PASS" starttime="20200622 17:48:49.253" endtime="20200622 17:48:49.254"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$ret1['reason']=='duplicated class name'</arg>
</arguments>
<msg timestamp="20200622 17:48:49.254" level="FAIL">'$ret1['reason']=='duplicated class name'' should be true.</msg>
<status status="FAIL" starttime="20200622 17:48:49.254" endtime="20200622 17:48:49.254"></status>
</kw>
<status status="FAIL" starttime="20200622 17:48:49.136" endtime="20200622 17:48:49.255" critical="yes">'$ret1['reason']=='duplicated class name'' should be true.</status>
</test>
<test id="s1-s1-s1-s1-t3" name="修改班级1 - tc000051">
<kw name="Add School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>1</arg>
<arg>2班</arg>
<arg>60</arg>
</arguments>
<assign>
<var>${ret1}</var>
</assign>
<msg timestamp="20200622 17:48:49.336" level="INFO">{'id': 427462, 'invitecode': '4274621686120', 'retcode': 0}</msg>
<msg timestamp="20200622 17:48:49.336" level="INFO">${ret1} = {'invitecode': '4274621686120', 'retcode': 0, 'id': 427462}</msg>
<status status="PASS" starttime="20200622 17:48:49.258" endtime="20200622 17:48:49.336"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$ret1['retcode']==0</arg>
</arguments>
<status status="PASS" starttime="20200622 17:48:49.337" endtime="20200622 17:48:49.337"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$ret1['id']</arg>
</arguments>
<assign>
<var>${classid}</var>
</assign>
<msg timestamp="20200622 17:48:49.338" level="INFO">${classid} = 427462</msg>
<status status="PASS" starttime="20200622 17:48:49.338" endtime="20200622 17:48:49.338"></status>
</kw>
<kw name="Modify School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>${classid}</arg>
<arg>222班</arg>
<arg>60</arg>
</arguments>
<assign>
<var>${modifyRet}</var>
</assign>
<msg timestamp="20200622 17:48:49.435" level="INFO">{'retcode': 0}</msg>
<msg timestamp="20200622 17:48:49.435" level="INFO">${modifyRet} = {'retcode': 0}</msg>
<status status="PASS" starttime="20200622 17:48:49.338" endtime="20200622 17:48:49.435"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$modifyRet['retcode']==0</arg>
</arguments>
<status status="PASS" starttime="20200622 17:48:49.436" endtime="20200622 17:48:49.436"></status>
</kw>
<kw name="List School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${ret2}</var>
</assign>
<msg timestamp="20200622 17:48:49.534" level="INFO">{ 'gradeid': 1,
  'retcode': 0,
  'retlist': [ { 'grade__name': '七年级',
                 'id': 427459,
                 'invitecode': '4274597213175',
                 'name': '1班',
                 'studentlimit': 60,
                 'studentnumber': 0,
                 'teacherlist': []},
               { 'grade__name': '七年级',
                 'id': 427462,
                 'invitecode': '4274621686120',
                 'name': '222班',
                 'studentlimit': 60,
                 'studentnumber': 0,
                 'teacherlist': []}]}</msg>
<msg timestamp="20200622 17:48:49.534" level="INFO">${ret2} = {'gradeid': 1, 'retlist': [{'name': '1班', 'grade__name': '七年级', 'invitecode': '4274597213175', 'studentlimit': 60, 'studentnumber': 0, 'id': 427459, 'teacherlist': []}, {'name': '222班', 'grade__name':...</msg>
<status status="PASS" starttime="20200622 17:48:49.436" endtime="20200622 17:48:49.534"></status>
</kw>
<kw name="Classlist Should Contain" library="pylib.SchoolClassLib">
<arguments>
<arg>&amp;{ret2}[retlist]</arg>
<arg>222班</arg>
<arg>七年级</arg>
<arg>&amp;{ret1}[invitecode]</arg>
<arg>60</arg>
<arg>0</arg>
<arg>&amp;{ret1}[id]</arg>
</arguments>
<msg timestamp="20200622 17:48:49.535" level="WARN">Accessing variable items using '&amp;{ret2}[retlist]' syntax is deprecated. Use '${ret2}[retlist]' instead.</msg>
<msg timestamp="20200622 17:48:49.536" level="WARN">Accessing variable items using '&amp;{ret1}[invitecode]' syntax is deprecated. Use '${ret1}[invitecode]' instead.</msg>
<msg timestamp="20200622 17:48:49.539" level="WARN">Accessing variable items using '&amp;{ret1}[id]' syntax is deprecated. Use '${ret1}[id]' instead.</msg>
<msg timestamp="20200622 17:48:49.540" level="INFO">occur 1 times</msg>
<status status="PASS" starttime="20200622 17:48:49.535" endtime="20200622 17:48:49.540"></status>
</kw>
<kw name="Delete School Class" library="pylib.SchoolClassLib" type="teardown">
<arguments>
<arg>${classid}</arg>
</arguments>
<status status="PASS" starttime="20200622 17:48:49.540" endtime="20200622 17:48:49.638"></status>
</kw>
<status status="PASS" starttime="20200622 17:48:49.257" endtime="20200622 17:48:49.640" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-t4" name="修改班级2 - tc000052">
<kw name="Add School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>1</arg>
<arg>2班</arg>
<arg>60</arg>
</arguments>
<assign>
<var>${ret1}</var>
</assign>
<msg timestamp="20200622 17:48:49.732" level="INFO">{'id': 427463, 'invitecode': '4274635396961', 'retcode': 0}</msg>
<msg timestamp="20200622 17:48:49.732" level="INFO">${ret1} = {'invitecode': '4274635396961', 'retcode': 0, 'id': 427463}</msg>
<status status="PASS" starttime="20200622 17:48:49.643" endtime="20200622 17:48:49.732"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$ret1['retcode']==0</arg>
</arguments>
<status status="PASS" starttime="20200622 17:48:49.733" endtime="20200622 17:48:49.733"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$ret1['id']</arg>
</arguments>
<assign>
<var>${classid}</var>
</assign>
<msg timestamp="20200622 17:48:49.734" level="INFO">${classid} = 427463</msg>
<status status="PASS" starttime="20200622 17:48:49.733" endtime="20200622 17:48:49.734"></status>
</kw>
<kw name="List School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${listret1}</var>
</assign>
<msg timestamp="20200622 17:48:49.835" level="INFO">{ 'gradeid': 1,
  'retcode': 0,
  'retlist': [ { 'grade__name': '七年级',
                 'id': 427459,
                 'invitecode': '4274597213175',
                 'name': '1班',
                 'studentlimit': 60,
                 'studentnumber': 0,
                 'teacherlist': []},
               { 'grade__name': '七年级',
                 'id': 427463,
                 'invitecode': '4274635396961',
                 'name': '2班',
                 'studentlimit': 60,
                 'studentnumber': 0,
                 'teacherlist': []}]}</msg>
<msg timestamp="20200622 17:48:49.836" level="INFO">${listret1} = {'gradeid': 1, 'retlist': [{'name': '1班', 'grade__name': '七年级', 'invitecode': '4274597213175', 'studentlimit': 60, 'studentnumber': 0, 'id': 427459, 'teacherlist': []}, {'name': '2班', 'grade__name': '...</msg>
<status status="PASS" starttime="20200622 17:48:49.734" endtime="20200622 17:48:49.836"></status>
</kw>
<kw name="Modify School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>${classid}</arg>
<arg>1班</arg>
<arg>60</arg>
</arguments>
<assign>
<var>${modifyRet}</var>
</assign>
<msg timestamp="20200622 17:48:49.936" level="INFO">{ 'reason': '未知错误:Traceback (most recent call last):\n'
            '  File '
            '"/home/yjyx/yijiao_src/yijiao_main/services/datamodel/schoolclass/models.py", '
            'line 612, in modifyClass\n'
            '    school_class.save()\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/models/base.py", '
            'line 710, in save\n'
            '    force_update=force_update, update_fields=update_fields)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/models/base.py", '
            'line 738, in save_base\n'
            '    updated = self._save_table(raw, cls, force_insert, '
            'force_update, using, update_fields)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/models/base.py", '
            'line 803, in _save_table\n'
            '    forced_update)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/models/base.py", '
            'line 853, in _do_update\n'
            '    return filtered._update(values) &gt; 0\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/models/query.py", '
            'line 580, in _update\n'
            '    return query.get_compiler(self.db).execute_sql(CURSOR)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py", '
            'line 1062, in execute_sql\n'
            '    cursor = super(SQLUpdateCompiler, '
            'self).execute_sql(result_type)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py", '
            'line 840, in execute_sql\n'
            '    cursor.execute(sql, params)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/backends/utils.py", '
            'line 64, in execute\n'
            '    return self.cursor.execute(sql, params)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/utils.py", line '
            '97, in __exit__\n'
            '    six.reraise(dj_exc_type, dj_exc_value, traceback)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/backends/utils.py", '
            'line 64, in execute\n'
            '    return self.cursor.execute(sql, params)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/django/db/backends/mysql/base.py", '
            'line 124, in execute\n'
            '    return self.cursor.execute(query, args)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/MySQLdb/cursors.py", line '
            '205, in execute\n'
            '    self.errorhandler(self, exc, value)\n'
            '  File '
            '"/usr/local/lib/python2.7/site-packages/MySQLdb/connections.py", '
            'line 36, in defaulterrorhandler\n'
            '    raise errorclass, errorvalue\n'
            'IntegrityError: (1062, "Duplicate entry '
            '\'1\\xe7\\x8f\\xad-1016-1\' for key \'name\'")\n',
  'retcode': 10000}</msg>
<msg timestamp="20200622 17:48:49.936" level="INFO">${modifyRet} = {'reason': '未知错误:Traceback (most recent call last):\n  File "/home/yjyx/yijiao_src/yijiao_main/services/datamodel/schoolclass/models.py", line 612, in modifyClass\n    school_class.save()\n  File "/us...</msg>
<status status="PASS" starttime="20200622 17:48:49.836" endtime="20200622 17:48:49.936"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$modifyRet['retcode']==1</arg>
</arguments>
<msg timestamp="20200622 17:48:49.937" level="FAIL">'$modifyRet['retcode']==1' should be true.</msg>
<status status="FAIL" starttime="20200622 17:48:49.937" endtime="20200622 17:48:49.937"></status>
</kw>
<kw name="Delete School Class" library="pylib.SchoolClassLib" type="teardown">
<arguments>
<arg>${classid}</arg>
</arguments>
<status status="PASS" starttime="20200622 17:48:49.938" endtime="20200622 17:48:50.037"></status>
</kw>
<status status="FAIL" starttime="20200622 17:48:49.642" endtime="20200622 17:48:50.038" critical="yes">'$modifyRet['retcode']==1' should be true.</status>
</test>
<test id="s1-s1-s1-s1-t5" name="修改班级3 - tc000053">
<kw name="Modify School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>99999999</arg>
<arg>1班</arg>
<arg>60</arg>
</arguments>
<assign>
<var>${modifyRet}</var>
</assign>
<msg timestamp="20200622 17:48:50.131" level="INFO">{'reason': 'id 为`99999999`的班级不存在', 'retcode': 404}</msg>
<msg timestamp="20200622 17:48:50.131" level="INFO">${modifyRet} = {'reason': 'id 为`99999999`的班级不存在', 'retcode': 404}</msg>
<status status="PASS" starttime="20200622 17:48:50.041" endtime="20200622 17:48:50.131"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>&amp;{modifyRet}[retcode]</arg>
<arg>${404}</arg>
</arguments>
<msg timestamp="20200622 17:48:50.132" level="WARN">Accessing variable items using '&amp;{modifyRet}[retcode]' syntax is deprecated. Use '${modifyRet}[retcode]' instead.</msg>
<status status="PASS" starttime="20200622 17:48:50.132" endtime="20200622 17:48:50.133"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>&amp;{modifyRet}[reason]</arg>
<arg>id 为`99999999`的班级不存在</arg>
</arguments>
<msg timestamp="20200622 17:48:50.134" level="WARN">Accessing variable items using '&amp;{modifyRet}[reason]' syntax is deprecated. Use '${modifyRet}[reason]' instead.</msg>
<status status="PASS" starttime="20200622 17:48:50.134" endtime="20200622 17:48:50.135"></status>
</kw>
<status status="PASS" starttime="20200622 17:48:50.040" endtime="20200622 17:48:50.135" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-t6" name="删除班级1 - tc000081">
<kw name="Delete School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>99999999</arg>
</arguments>
<assign>
<var>${delRet}</var>
</assign>
<msg timestamp="20200622 17:48:50.234" level="INFO">${delRet} = {'reason': 'id 为`99999999`的班级不存在', 'retcode': 404}</msg>
<status status="PASS" starttime="20200622 17:48:50.137" endtime="20200622 17:48:50.234"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>&amp;{delRet}[retcode]</arg>
<arg>${404}</arg>
</arguments>
<msg timestamp="20200622 17:48:50.234" level="WARN">Accessing variable items using '&amp;{delRet}[retcode]' syntax is deprecated. Use '${delRet}[retcode]' instead.</msg>
<status status="PASS" starttime="20200622 17:48:50.234" endtime="20200622 17:48:50.236"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>&amp;{delRet}[reason]</arg>
<arg>id 为`99999999`的班级不存在</arg>
</arguments>
<msg timestamp="20200622 17:48:50.237" level="WARN">Accessing variable items using '&amp;{delRet}[reason]' syntax is deprecated. Use '${delRet}[reason]' instead.</msg>
<status status="PASS" starttime="20200622 17:48:50.236" endtime="20200622 17:48:50.237"></status>
</kw>
<status status="PASS" starttime="20200622 17:48:50.136" endtime="20200622 17:48:50.238" critical="yes"></status>
</test>
<test id="s1-s1-s1-s1-t7" name="删除班级2 - tc000082">
<kw name="List School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${listret1}</var>
</assign>
<msg timestamp="20200622 17:48:50.333" level="INFO">{ 'gradeid': 1,
  'retcode': 0,
  'retlist': [ { 'grade__name': '七年级',
                 'id': 427459,
                 'invitecode': '4274597213175',
                 'name': '1班',
                 'studentlimit': 60,
                 'studentnumber': 0,
                 'teacherlist': []}]}</msg>
<msg timestamp="20200622 17:48:50.334" level="INFO">${listret1} = {'gradeid': 1, 'retlist': [{'name': '1班', 'grade__name': '七年级', 'invitecode': '4274597213175', 'studentlimit': 60, 'studentnumber': 0, 'id': 427459, 'teacherlist': []}], 'retcode': 0}</msg>
<status status="PASS" starttime="20200622 17:48:50.239" endtime="20200622 17:48:50.334"></status>
</kw>
<kw name="Add School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>1</arg>
<arg>2班</arg>
<arg>60</arg>
</arguments>
<assign>
<var>${addRet}</var>
</assign>
<msg timestamp="20200622 17:48:50.442" level="INFO">{'id': 427464, 'invitecode': '4274642975102', 'retcode': 0}</msg>
<msg timestamp="20200622 17:48:50.442" level="INFO">${addRet} = {'invitecode': '4274642975102', 'retcode': 0, 'id': 427464}</msg>
<status status="PASS" starttime="20200622 17:48:50.335" endtime="20200622 17:48:50.442"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$addRet['retcode']==0</arg>
</arguments>
<status status="PASS" starttime="20200622 17:48:50.442" endtime="20200622 17:48:50.443"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$addRet['id']</arg>
</arguments>
<assign>
<var>${classid}</var>
</assign>
<msg timestamp="20200622 17:48:50.443" level="INFO">${classid} = 427464</msg>
<status status="PASS" starttime="20200622 17:48:50.443" endtime="20200622 17:48:50.444"></status>
</kw>
<kw name="List School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${listret2}</var>
</assign>
<msg timestamp="20200622 17:48:50.536" level="INFO">{ 'gradeid': 1,
  'retcode': 0,
  'retlist': [ { 'grade__name': '七年级',
                 'id': 427459,
                 'invitecode': '4274597213175',
                 'name': '1班',
                 'studentlimit': 60,
                 'studentnumber': 0,
                 'teacherlist': []},
               { 'grade__name': '七年级',
                 'id': 427464,
                 'invitecode': '4274642975102',
                 'name': '2班',
                 'studentlimit': 60,
                 'studentnumber': 0,
                 'teacherlist': []}]}</msg>
<msg timestamp="20200622 17:48:50.536" level="INFO">${listret2} = {'gradeid': 1, 'retlist': [{'name': '1班', 'grade__name': '七年级', 'invitecode': '4274597213175', 'studentlimit': 60, 'studentnumber': 0, 'id': 427459, 'teacherlist': []}, {'name': '2班', 'grade__name': '...</msg>
<status status="PASS" starttime="20200622 17:48:50.444" endtime="20200622 17:48:50.536"></status>
</kw>
<kw name="Classlist Should Contain" library="pylib.SchoolClassLib">
<arguments>
<arg>&amp;{listret2}[retlist]</arg>
<arg>2班</arg>
<arg>七年级</arg>
<arg>&amp;{addRet}[invitecode]</arg>
<arg>60</arg>
<arg>0</arg>
<arg>&amp;{addRet}[id]</arg>
</arguments>
<msg timestamp="20200622 17:48:50.537" level="WARN">Accessing variable items using '&amp;{listret2}[retlist]' syntax is deprecated. Use '${listret2}[retlist]' instead.</msg>
<msg timestamp="20200622 17:48:50.538" level="WARN">Accessing variable items using '&amp;{addRet}[invitecode]' syntax is deprecated. Use '${addRet}[invitecode]' instead.</msg>
<msg timestamp="20200622 17:48:50.539" level="WARN">Accessing variable items using '&amp;{addRet}[id]' syntax is deprecated. Use '${addRet}[id]' instead.</msg>
<msg timestamp="20200622 17:48:50.540" level="INFO">occur 1 times</msg>
<status status="PASS" starttime="20200622 17:48:50.537" endtime="20200622 17:48:50.540"></status>
</kw>
<kw name="Delete School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>${classid}</arg>
</arguments>
<assign>
<var>${delRet}</var>
</assign>
<msg timestamp="20200622 17:48:50.637" level="INFO">${delRet} = {'retcode': 0}</msg>
<status status="PASS" starttime="20200622 17:48:50.540" endtime="20200622 17:48:50.637"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>&amp;{delRet}[retcode]</arg>
<arg>${0}</arg>
</arguments>
<msg timestamp="20200622 17:48:50.638" level="WARN">Accessing variable items using '&amp;{delRet}[retcode]' syntax is deprecated. Use '${delRet}[retcode]' instead.</msg>
<status status="PASS" starttime="20200622 17:48:50.638" endtime="20200622 17:48:50.640"></status>
</kw>
<kw name="List School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${listret3}</var>
</assign>
<msg timestamp="20200622 17:48:50.734" level="INFO">{ 'gradeid': 1,
  'retcode': 0,
  'retlist': [ { 'grade__name': '七年级',
                 'id': 427459,
                 'invitecode': '4274597213175',
                 'name': '1班',
                 'studentlimit': 60,
                 'studentnumber': 0,
                 'teacherlist': []}]}</msg>
<msg timestamp="20200622 17:48:50.734" level="INFO">${listret3} = {'gradeid': 1, 'retlist': [{'name': '1班', 'grade__name': '七年级', 'invitecode': '4274597213175', 'studentlimit': 60, 'studentnumber': 0, 'id': 427459, 'teacherlist': []}], 'retcode': 0}</msg>
<status status="PASS" starttime="20200622 17:48:50.640" endtime="20200622 17:48:50.734"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${listret1}</arg>
<arg>${listret3}</arg>
</arguments>
<status status="PASS" starttime="20200622 17:48:50.735" endtime="20200622 17:48:50.735"></status>
</kw>
<status status="PASS" starttime="20200622 17:48:50.238" endtime="20200622 17:48:50.735" critical="yes"></status>
</test>
<status status="FAIL" starttime="20200622 17:48:48.836" endtime="20200622 17:48:50.737"></status>
</suite>
<kw name="Delete School Class" library="pylib.SchoolClassLib" type="teardown">
<arguments>
<arg>${suite_g7c1_classid}</arg>
</arguments>
<status status="PASS" starttime="20200622 17:48:50.740" endtime="20200622 17:48:50.837"></status>
</kw>
<status status="FAIL" starttime="20200622 17:48:48.731" endtime="20200622 17:48:50.837"></status>
</suite>
<suite id="s1-s1-s2" name="添加班级" source="F:\PycharmProjects\YJYX\tc\空白数据\添加班级.robot">
<test id="s1-s1-s2-t1" name="添加班级1 - tc000001">
<kw name="Add School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>1</arg>
<arg>1班</arg>
<arg>60</arg>
</arguments>
<assign>
<var>${ret1}</var>
</assign>
<msg timestamp="20200622 17:48:50.939" level="INFO">{'id': 427465, 'invitecode': '4274654880760', 'retcode': 0}</msg>
<msg timestamp="20200622 17:48:50.939" level="INFO">${ret1} = {'invitecode': '4274654880760', 'retcode': 0, 'id': 427465}</msg>
<status status="PASS" starttime="20200622 17:48:50.845" endtime="20200622 17:48:50.939"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$ret1['retcode']==0</arg>
</arguments>
<status status="PASS" starttime="20200622 17:48:50.940" endtime="20200622 17:48:50.940"></status>
</kw>
<kw name="List School Class" library="pylib.SchoolClassLib">
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${ret2}</var>
</assign>
<msg timestamp="20200622 17:48:51.043" level="INFO">{ 'gradeid': 1,
  'retcode': 0,
  'retlist': [ { 'grade__name': '七年级',
                 'id': 427465,
                 'invitecode': '4274654880760',
                 'name': '1班',
                 'studentlimit': 60,
                 'studentnumber': 0,
                 'teacherlist': []}]}</msg>
<msg timestamp="20200622 17:48:51.043" level="INFO">${ret2} = {'gradeid': 1, 'retlist': [{'name': '1班', 'grade__name': '七年级', 'invitecode': '4274654880760', 'studentlimit': 60, 'studentnumber': 0, 'id': 427465, 'teacherlist': []}], 'retcode': 0}</msg>
<status status="PASS" starttime="20200622 17:48:50.940" endtime="20200622 17:48:51.043"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$ret2['retlist'][0]</arg>
</arguments>
<assign>
<var>${fc}</var>
</assign>
<msg timestamp="20200622 17:48:51.045" level="INFO">${fc} = {'name': '1班', 'grade__name': '七年级', 'invitecode': '4274654880760', 'studentlimit': 60, 'studentnumber': 0, 'id': 427465, 'teacherlist': []}</msg>
<status status="PASS" starttime="20200622 17:48:51.044" endtime="20200622 17:48:51.045"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$fc['id']==$ret1['id']</arg>
</arguments>
<status status="PASS" starttime="20200622 17:48:51.046" endtime="20200622 17:48:51.046"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>$fc['invitecode']==$ret1['invitecode']</arg>
</arguments>
<status status="PASS" starttime="20200622 17:48:51.047" endtime="20200622 17:48:51.047"></status>
</kw>
<kw name="Delete School Class" library="pylib.SchoolClassLib" type="teardown">
<arguments>
<arg>&amp;{ret1}[id]</arg>
</arguments>
<msg timestamp="20200622 17:48:51.048" level="WARN">Accessing variable items using '&amp;{ret1}[id]' syntax is deprecated. Use '${ret1}[id]' instead.</msg>
<status status="PASS" starttime="20200622 17:48:51.048" endtime="20200622 17:48:51.136"></status>
</kw>
<status status="PASS" starttime="20200622 17:48:50.844" endtime="20200622 17:48:51.137" critical="yes"></status>
</test>
<status status="PASS" starttime="20200622 17:48:50.841" endtime="20200622 17:48:51.138"></status>
</suite>
<status status="FAIL" starttime="20200622 17:48:48.362" endtime="20200622 17:48:51.141"></status>
</suite>
<status status="FAIL" starttime="20200622 17:48:48.340" endtime="20200622 17:48:51.143"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="2">Critical Tests</stat>
<stat pass="6" fail="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="2" id="s1" name="Tc">Tc</stat>
<stat pass="6" fail="2" id="s1-s1" name="空白数据">Tc.空白数据</stat>
<stat pass="5" fail="2" id="s1-s1-s1" name="D-7年级1班">Tc.空白数据.D-7年级1班</stat>
<stat pass="5" fail="2" id="s1-s1-s1-s1" name="班级管理">Tc.空白数据.D-7年级1班.班级管理</stat>
<stat pass="1" fail="0" id="s1-s1-s2" name="添加班级">Tc.空白数据.添加班级</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200622 17:48:49.038" level="WARN">Accessing variable items using '&amp;{ret1}[invitecode]' syntax is deprecated. Use '${ret1}[invitecode]' instead.</msg>
<msg timestamp="20200622 17:48:49.039" level="WARN">Accessing variable items using '&amp;{ret1}[id]' syntax is deprecated. Use '${ret1}[id]' instead.</msg>
<msg timestamp="20200622 17:48:49.041" level="WARN">Accessing variable items using '&amp;{ret1}[id]' syntax is deprecated. Use '${ret1}[id]' instead.</msg>
<msg timestamp="20200622 17:48:49.535" level="WARN">Accessing variable items using '&amp;{ret2}[retlist]' syntax is deprecated. Use '${ret2}[retlist]' instead.</msg>
<msg timestamp="20200622 17:48:49.536" level="WARN">Accessing variable items using '&amp;{ret1}[invitecode]' syntax is deprecated. Use '${ret1}[invitecode]' instead.</msg>
<msg timestamp="20200622 17:48:49.539" level="WARN">Accessing variable items using '&amp;{ret1}[id]' syntax is deprecated. Use '${ret1}[id]' instead.</msg>
<msg timestamp="20200622 17:48:50.132" level="WARN">Accessing variable items using '&amp;{modifyRet}[retcode]' syntax is deprecated. Use '${modifyRet}[retcode]' instead.</msg>
<msg timestamp="20200622 17:48:50.134" level="WARN">Accessing variable items using '&amp;{modifyRet}[reason]' syntax is deprecated. Use '${modifyRet}[reason]' instead.</msg>
<msg timestamp="20200622 17:48:50.234" level="WARN">Accessing variable items using '&amp;{delRet}[retcode]' syntax is deprecated. Use '${delRet}[retcode]' instead.</msg>
<msg timestamp="20200622 17:48:50.237" level="WARN">Accessing variable items using '&amp;{delRet}[reason]' syntax is deprecated. Use '${delRet}[reason]' instead.</msg>
<msg timestamp="20200622 17:48:50.537" level="WARN">Accessing variable items using '&amp;{listret2}[retlist]' syntax is deprecated. Use '${listret2}[retlist]' instead.</msg>
<msg timestamp="20200622 17:48:50.538" level="WARN">Accessing variable items using '&amp;{addRet}[invitecode]' syntax is deprecated. Use '${addRet}[invitecode]' instead.</msg>
<msg timestamp="20200622 17:48:50.539" level="WARN">Accessing variable items using '&amp;{addRet}[id]' syntax is deprecated. Use '${addRet}[id]' instead.</msg>
<msg timestamp="20200622 17:48:50.638" level="WARN">Accessing variable items using '&amp;{delRet}[retcode]' syntax is deprecated. Use '${delRet}[retcode]' instead.</msg>
<msg timestamp="20200622 17:48:51.048" level="WARN">Accessing variable items using '&amp;{ret1}[id]' syntax is deprecated. Use '${ret1}[id]' instead.</msg>
</errors>
</robot>
